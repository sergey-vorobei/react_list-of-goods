{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","w1","w2","ALPHABET","localeCompare","LENGTH","length","reverse","App","state","NONE","revers","setState","sortByAlphabet","sortByLength","reset","this","isSelected","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAiBzB,OAfAG,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAGG,cAAcF,GAC1B,KAAKT,EAASY,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OACxB,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,G,SAhCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAMe,EAAb,4MACEC,MAAQ,CACNX,YAAY,EACZD,SAAUJ,EAASiB,MAHvB,EAMEC,OAAS,WACP,EAAKC,UAAS,SAACH,GAAD,MAAY,CACxBX,YAAaW,EAAMX,gBARzB,EAYEe,eAAiB,WACf,EAAKD,SAAS,CAAEf,SAAUJ,EAASU,YAbvC,EAgBEW,aAAe,WACb,EAAKF,SAAS,CAAEf,SAAUJ,EAASY,UAjBvC,EAoBEU,MAAQ,WACN,EAAKH,SAAS,CACZd,YAAY,EACZD,SAAUJ,EAASiB,QAvBzB,4CA2BE,WACE,MAAiCM,KAAKP,MAA9BZ,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WACZmB,EAAanB,GAAeD,IAAaJ,EAASiB,KAExD,OACE,sBAAKQ,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWrB,IAAaJ,EAASU,SAC7B,iBACA,0BACJiB,QAASJ,KAAKH,eALhB,iCAUA,wBACEM,KAAK,SACLD,UAAWrB,IAAaJ,EAASY,OAC7B,oBACA,6BACJe,QAASJ,KAAKF,aALhB,4BAUA,wBACEK,KAAK,SACLD,UAAWpB,EACP,oBACA,6BACJsB,QAASJ,KAAKL,OALhB,qBAUCM,GAEG,wBACEE,KAAK,SACLD,UAAU,4BACVE,QAASJ,KAAKD,MAHhB,sBAUN,6BACGpB,EAAkBD,EAAiB,CAAEG,WAAUC,eAAcuB,KAC5D,SAACC,GAAD,OACE,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,eAhFrB,GAAyBC,IAAMC,WCtD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a87129d2.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((w1, w2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return w1.localeCompare(w2);\n      case SortType.LENGTH:\n        return w1.length - w2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  revers = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const isSelected = isReversed || (sortType !== SortType.NONE);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={sortType === SortType.ALPHABET\n              ? 'button is-info'\n              : 'button is-info is-light'}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={sortType === SortType.LENGTH\n              ? 'button is-success'\n              : 'button is-success is-light'}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={isReversed\n              ? 'button is-warning'\n              : 'button is-warning is-light'}\n            onClick={this.revers}\n          >\n            Reverse\n          </button>\n\n          {isSelected\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          {getReorderedGoods(goodsFromServer, { sortType, isReversed }).map(\n            (good) => (\n              <li\n                key={good}\n                data-cy=\"Good\"\n              >\n                {good}\n              </li>\n            ),\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}